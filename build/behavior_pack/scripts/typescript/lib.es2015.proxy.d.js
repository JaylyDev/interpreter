export const lib_es2015_proxy_d_ts='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\n\n\ninterface ProxyHandler<T extends object> {\n    apply?(target: T, thisArg: any, argArray: any[]): any;\n    construct?(target: T, argArray: any[], newTarget: Function): object;\n    defineProperty?(target: T, p: string | symbol, attributes: PropertyDescriptor): boolean;\n    deleteProperty?(target: T, p: string | symbol): boolean;\n    get?(target: T, p: string | symbol, receiver: any): any;\n    getOwnPropertyDescriptor?(target: T, p: string | symbol): PropertyDescriptor | undefined;\n    getPrototypeOf?(target: T): object | null;\n    has?(target: T, p: string | symbol): boolean;\n    isExtensible?(target: T): boolean;\n    ownKeys?(target: T): ArrayLike<string | symbol>;\n    preventExtensions?(target: T): boolean;\n    set?(target: T, p: string | symbol, value: any, receiver: any): boolean;\n    setPrototypeOf?(target: T, v: object | null): boolean;\n}\n\ninterface ProxyConstructor {\n    revocable<T extends object>(target: T, handler: ProxyHandler<T>): { proxy: T; revoke: () => void; };\n    new <T extends object>(target: T, handler: ProxyHandler<T>): T;\n}\ndeclare var Proxy: ProxyConstructor;\n';